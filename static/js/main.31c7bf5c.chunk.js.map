{"version":3,"sources":["components/IntroOutroContent/index.jsx","pages/GameStartPage/GameStartPage.jsx","components/ScoreBlock/ScoreBlock.jsx","components/AnswerItem/AnswerItem.jsx","components/QuestionsBlock/QuestionsBlock.jsx","pages/GameOverPage/GameOverPage.jsx","pages/WinGamePage/WinGamePage.jsx","pages/GameMainPage/GameMainPage.jsx","components/App/App.jsx","index.jsx"],"names":["IntroOutroContent","heading","title","buttonText","navigatePath","handleTryAgainButton","className","src","alt","to","onClick","type","GameStartPage","classNames","require","ScoreBlock","data","questionNumber","scoreBlockStyle","handleCloseClick","role","tabIndex","map","item","index","scoreItemStatus","scoreItemStyle","viewBox","xmlns","d","AnswerItem","id","winScore","handleAnswerClick","value","isCorrect","letter","handleAnswerClickStyle","activeButton","disabledButton","active","answerItemStyle","QuestionsBlock","question","answers","questionsBlockStyle","handleBurgerClick","useState","setActiveButton","setDisabledButton","useEffect","number","GameOverPage","score","setQuestionNumber","setIsGameOver","WinGamePage","GameMainPage","scoresList","setScoresList","isGameOver","finalScore","setFinalWinScore","fetchedData","setFetchedData","isGameWin","setIsGameWin","hideQuestionsBlock","setHideQuestionsBlock","showScoreBlock","setShowBlock","a","fetch","response","json","loadScoresList","loadQuestionsAndAnswers","setTimeout","prevState","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31c7bf5c.chunk.js","sourcesContent":["import React from 'react';\nimport './IntroOutroContent.scss';\nimport { Link } from 'react-router-dom';\n\nconst IntroOutroContent = ({\n  heading, title, buttonText, navigatePath, handleTryAgainButton,\n}) => (\n  <div className=\"container\">\n    <img src=\"/images/introImg.png\" alt=\"greed\" className=\"contentImage\" />\n    <div className=\"textBlock\">\n      <p className=\"textBlock_heading\">{heading}</p>\n      <h1 className=\"textBlock_title\">{title}</h1>\n      <Link to={navigatePath} onClick={handleTryAgainButton}>\n        <button className=\"textBlock_button\" type=\"button\">{buttonText}</button>\n      </Link>\n    </div>\n  </div>\n);\n\nexport default IntroOutroContent;\n","import React from 'react';\nimport './GameStartPage.scss';\nimport IntroOutroContent from '../../components/IntroOutroContent';\n\nconst GameStartPage = () => {\n  const title = 'Who wants to be aÂ millionaire?';\n  const buttonText = 'Start';\n  const navigatePath = '/main';\n  return (\n    <div className=\"startPageContainer\">\n      <IntroOutroContent\n        title={title}\n        buttonText={buttonText}\n        navigatePath={navigatePath}\n      />\n    </div>\n  );\n};\n\nexport default GameStartPage;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport './ScoreBlock.scss';\n\nconst classNames = require('classnames');\n\nconst ScoreBlock = ({\n  data, questionNumber, scoreBlockStyle, handleCloseClick,\n}) => (\n  <div className={scoreBlockStyle}>\n    <div className=\"closeButton\" onClick={handleCloseClick} role=\"button\" tabIndex=\"0\" />\n    <div className=\"scoreBlock_scoreList\">\n      {data.map((item, index) => {\n        let scoreItemStatus = '';\n\n        if (index === questionNumber) {\n          scoreItemStatus = 'active';\n        }\n\n        if (index < questionNumber) {\n          scoreItemStatus = 'passed';\n        }\n\n        const scoreItemStyle = classNames('scoreItem', scoreItemStatus);\n\n        return (\n          <div className={scoreItemStyle} key={item}>\n            <span className=\"scoreItem_value\">{`$${item}`}</span>\n\n            <svg viewBox=\"0 0 376 40\" xmlns=\"http://www.w3.org/2000/svg\" className=\"scoreItem_icon\">\n              <path d=\"M69 20H0\" />\n              <path d=\"M376 20H307\" />\n              <path d=\"M81.4526 4.63788C83.6376 2.01596 86.8742 0.5 90.2872 0.5H285.713C289.126 0.5 292.362 2.01597 294.547 4.63788L307.349 20L294.547 35.3621C292.362 37.984 289.126 39.5 285.713 39.5H90.2872C86.8742 39.5 83.6376 37.984 81.4526 35.3621L68.6509 20L81.4526 4.63788Z\" />\n            </svg>\n\n          </div>\n        );\n      })}\n    </div>\n  </div>\n);\n\nexport default ScoreBlock;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport './AnswerItem.scss';\n\nconst classNames = require('classnames');\n\nconst AnswerItem = ({\n  id,\n  winScore,\n  handleAnswerClick,\n  value,\n  isCorrect,\n  letter,\n  handleAnswerClickStyle,\n  activeButton,\n  disabledButton,\n}) => {\n  let active = '';\n\n  if (activeButton === letter && isCorrect) {\n    active = 'right';\n  }\n\n  if (activeButton === letter && !isCorrect) {\n    active = 'wrong';\n  }\n\n  const answerItemStyle = classNames('answerItem', active, disabledButton);\n  return (\n    <div\n      role=\"button\"\n      tabIndex=\"0\"\n      className={answerItemStyle}\n      onClick={() => {\n        handleAnswerClick(isCorrect, id, winScore, value);\n        handleAnswerClickStyle(letter);\n      }}\n    >\n      <div className=\"answerItem_value\">\n        <span className=\"answerItem_valueNum\">{letter}</span>\n        {value}\n      </div>\n      <div>\n        <svg className=\"answerItem_icon\" viewBox=\"0 0 421 72\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M404 36L421 36\" />\n          <path d=\"M0 36L17 36\" />\n          <path d=\"M49.012 0.5H371.988C375.607 0.5 379.014 2.2033 381.186 5.09773L404.375 36L381.186 66.9023C379.014 69.7967 375.607 71.5 371.988 71.5H49.012C45.3933 71.5 41.9857 69.7967 39.8137 66.9023L16.6251 36L39.8137 5.09773C41.9857 2.2033 45.3933 0.5 49.012 0.5Z\" />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default AnswerItem;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState, useEffect } from 'react';\nimport './QuestionsBlock.scss';\nimport AnswerItem from '../AnswerItem/AnswerItem';\n\nconst QuestionsBlock = ({\n  question,\n  answers,\n  id,\n  winScore,\n  handleAnswerClick,\n  questionNumber,\n  questionsBlockStyle,\n  handleBurgerClick,\n}) => {\n  const [activeButton, setActiveButton] = useState('');\n  const [disabledButton, setDisabledButton] = useState('');\n\n  useEffect(() => {\n    setActiveButton('');\n    setDisabledButton('');\n  }, [questionNumber]);\n\n  const handleAnswerClickStyle = (number) => {\n    setActiveButton(number);\n    setDisabledButton('disabled');\n  };\n\n  return (\n    <div className={questionsBlockStyle}>\n      <div className=\"burger\" onClick={handleBurgerClick} role=\"button\" tabIndex=\"0\">\n        <div className=\"burger_item\" />\n        <div className=\"burger_item\" />\n        <div className=\"burger_item\" />\n      </div>\n      <div className=\"questionsContainer\">\n        <h2 className=\"questionsContainer_questionTitle\">{question}</h2>\n        <div className=\"questionsContainer_answersList\">\n          {answers && answers.map(({\n            value, letter, isCorrect,\n          }) => (\n            <AnswerItem\n              key={value}\n              value={value}\n              letter={letter}\n              isCorrect={isCorrect}\n              id={id}\n              winScore={winScore}\n              handleAnswerClick={handleAnswerClick}\n              handleAnswerClickStyle={handleAnswerClickStyle}\n              activeButton={activeButton}\n              disabledButton={disabledButton}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionsBlock;\n","import React from 'react';\nimport './GameOverPage.scss';\nimport IntroOutroContent from '../../components/IntroOutroContent';\n\nconst GameOverPage = ({\n  score, setQuestionNumber, setIsGameOver,\n}) => {\n  const heading = 'Total score:';\n  const buttonText = 'Try again';\n  const navigatePath = '/';\n  const handleTryAgainButton = () => {\n    setQuestionNumber(0);\n    setIsGameOver(false);\n  };\n\n  return (\n    <div className=\"endPageContainer\">\n      <IntroOutroContent\n        heading={heading}\n        title={score}\n        buttonText={buttonText}\n        navigatePath={navigatePath}\n        handleTryAgainButton={handleTryAgainButton}\n      />\n    </div>\n  );\n};\n\nexport default GameOverPage;\n","import React from 'react';\nimport './WinGamePage.scss';\n\nconst WinGamePage = () => (\n  <div className=\"winPageContainer\">\n    <img src=\"/images/introImg.png\" alt=\"greed\" className=\"winPageContainer_contentImage\" />\n    <h1 className=\"winPageContainer_title\">Congratulations!!! You are win the main prize $1,000,000</h1>\n  </div>\n);\n\nexport default WinGamePage;\n","import React, { useState, useEffect } from 'react';\nimport './GameMainPage.scss';\nimport ScoreBlock from '../../components/ScoreBlock/ScoreBlock';\nimport QuestionsBlock from '../../components/QuestionsBlock/QuestionsBlock';\nimport GameOverPage from '../GameOverPage/GameOverPage';\nimport WinGamePage from '../WinGamePage/WinGamePage';\n\nconst classNames = require('classnames');\n\nconst GameMainPage = () => {\n  const [questionNumber, setQuestionNumber] = useState(0);\n  const [scoresList, setScoresList] = useState([]);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [finalScore, setFinalWinScore] = useState('');\n  const [fetchedData, setFetchedData] = useState({});\n  const [isGameWin, setIsGameWin] = useState(false);\n  const [hideQuestionsBlock, setHideQuestionsBlock] = useState('');\n  const [showScoreBlock, setShowBlock] = useState('');\n  const questionsBlockStyle = classNames('questionsBlock', hideQuestionsBlock);\n  const scoreBlockStyle = classNames('scoreBlock', showScoreBlock);\n\n  useEffect(() => {\n    const loadScoresList = async () => {\n      const response = await fetch('http://localhost:4200/scoresList');\n      const data = await response.json();\n      setScoresList(data);\n    };\n\n    loadScoresList();\n  }, []);\n\n  useEffect(() => {\n    const loadQuestionsAndAnswers = async () => {\n      const response = await fetch('http://localhost:4200/questionsAndAnswers');\n      const data = await response.json();\n      setFetchedData(data[questionNumber]);\n    };\n\n    loadQuestionsAndAnswers();\n  }, [questionNumber]);\n\n  const handleAnswerClick = (isCorrect, id, winScore) => {\n    const lastQuestionId = 11;\n\n    setTimeout(() => {\n      if (id === lastQuestionId && isCorrect) {\n        setIsGameWin(true);\n      }\n\n      if (!isCorrect) {\n        setIsGameOver(true);\n        setFinalWinScore(winScore);\n      }\n\n      if (isCorrect) {\n        setQuestionNumber(((prevState) => prevState + 1));\n      }\n    }, 1000);\n  };\n\n  const handleBurgerClick = () => {\n    setHideQuestionsBlock('disabled');\n    setShowBlock('enabled');\n  };\n\n  const handleCloseClick = () => {\n    setHideQuestionsBlock('');\n    setShowBlock('');\n  };\n\n  if (isGameOver) {\n    return (\n      <GameOverPage\n        score={finalScore}\n        setQuestionNumber={setQuestionNumber}\n        setIsGameOver={setIsGameOver}\n      />\n    );\n  }\n\n  if (isGameWin) {\n    return (\n      <WinGamePage />\n    );\n  }\n\n  return (\n    <div className=\"mainPageContainer\">\n      <QuestionsBlock\n        handleBurgerClick={handleBurgerClick}\n        questionsBlockStyle={questionsBlockStyle}\n        question={fetchedData.question}\n        answers={fetchedData.answers}\n        id={fetchedData.id}\n        winScore={fetchedData.winScore}\n        handleAnswerClick={handleAnswerClick}\n        questionNumber={questionNumber}\n      />\n      <ScoreBlock\n        data={scoresList}\n        questionNumber={questionNumber}\n        scoreBlockStyle={scoreBlockStyle}\n        handleCloseClick={handleCloseClick}\n      />\n    </div>\n  );\n};\n\nexport default GameMainPage;\n","import React from 'react';\nimport './resets.scss';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport GameStartPage from '../../pages/GameStartPage/GameStartPage';\nimport GameMainPage from '../../pages/GameMainPage/GameMainPage';\nimport WinGamePage from '../../pages/WinGamePage/WinGamePage';\nimport GameOverPage from '../../pages/GameOverPage/GameOverPage';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n\n      <Route path=\"/\" exact component={GameStartPage} />\n      <Route path=\"/main\" component={GameMainPage} />\n      <Route path=\"/gameOver\" component={GameOverPage} />\n      <Route path=\"/gameWin\" component={WinGamePage} />\n\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}